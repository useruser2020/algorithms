// мы делим массив на две части - то, что уже отсортировано и остальное.
// На каждом шаге пробегаем не отсортированную последовательность, выбираем наименьший элемент и дополняем отсортированную часть.
// Внешний цикл отщелкивает границу между отсортированным и не отсортированным, а внутренний цикл выбирает наименьшее из не отсортированной части.

package main

import "fmt"

func main() {
	var arr = []int{12, 44, 32, 54, 27, 2, 9, 10, 99}
	fmt.Print(selectSort(arr))
}

func selectSort(arr []int) []int {
	for i := 0; i < len(arr) - 1; i++ {
		mn := i
		for j := i + 1; j < len(arr); j++ {
			if arr[j] < arr[mn] {
				mn = j
			}
		}

		if mn != i {
			arr[i], arr[mn] = arr[mn], arr[i]
		}
	}

	return arr
}
